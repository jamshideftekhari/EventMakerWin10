// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// DEFAULT NUMBER of list elements
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            XamlText uIItem3Text = this.UIEventMakerWin10Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '3'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText, "LIST ELEMENT COUNT IS NOT 3");
        }
        
        /// <summary>
        /// TEST AFTER REMOVE
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            XamlText uIItem3Text = this.UIEventMakerWin10Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '2'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText, "ONE ITEM ARE REMOVED SHOULD BE 2");
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public UIEventMakerWin10Window UIEventMakerWin10Window
        {
            get
            {
                if ((this.mUIEventMakerWin10Window == null))
                {
                    this.mUIEventMakerWin10Window = new UIEventMakerWin10Window();
                }
                return this.mUIEventMakerWin10Window;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private UIEventMakerWin10Window mUIEventMakerWin10Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '3'
        /// </summary>
        public string UIItem3TextDisplayText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '2'
        /// </summary>
        public string UIItem3TextDisplayText = "2";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEventMakerWin10Window : XamlWindow
    {
        
        public UIEventMakerWin10Window()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "EventMakerWin10";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("EventMakerWin10");
            #endregion
        }
        
        #region Properties
        public XamlText UIItem3Text
        {
            get
            {
                if ((this.mUIItem3Text == null))
                {
                    this.mUIItem3Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIItem3Text.SearchProperties[XamlText.PropertyNames.AutomationId] = "textBlock";
                    this.mUIItem3Text.WindowTitles.Add("EventMakerWin10");
                    #endregion
                }
                return this.mUIItem3Text;
            }
        }
        #endregion
        
        #region Fields
        private XamlText mUIItem3Text;
        #endregion
    }
}
